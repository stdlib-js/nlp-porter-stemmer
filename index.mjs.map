{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* This code is a modification of an existing JavaScript implementation of their [Porter stemming algorithm]{@link https://tartarus.org/martin/PorterStemmer/}.\n*\n* ```text\n* Release 1 be 'andargor', Jul 2004\n* Release 2 (substantially revised) by Christopher McKenzie, Aug 2009\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar endsWith = require( '@stdlib/string-ends-with' );\nvar lowercase = require( '@stdlib/string-lowercase' );\nvar replace = require( '@stdlib/string-replace' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// VARIABLES //\n\nvar step2list = {\n\t'ational': 'ate',\n\t'tional': 'tion',\n\t'enci': 'ence',\n\t'anci': 'ance',\n\t'izer': 'ize',\n\t'bli': 'ble',\n\t'alli': 'al',\n\t'entli': 'ent',\n\t'eli': 'e',\n\t'ousli': 'ous',\n\t'ization': 'ize',\n\t'ation': 'ate',\n\t'ator': 'ate',\n\t'alism': 'al',\n\t'iveness': 'ive',\n\t'fulness': 'ful',\n\t'ousness': 'ous',\n\t'aliti': 'al',\n\t'iviti': 'ive',\n\t'biliti': 'ble',\n\t'logi': 'log'\n};\nvar step3list = {\n\t'icate': 'ic',\n\t'ative': '',\n\t'alize': 'al',\n\t'iciti': 'ic',\n\t'ical': 'ic',\n\t'ful': '',\n\t'ness': ''\n};\nvar c = '[^aeiou]'; // consonant\nvar v = '[aeiouy]'; // vowel\nvar C = c + '[^aeiouy]*'; // consonant sequence\nvar V = v + '[aeiou]*'; // vowel sequence\nvar RE_CV = new RegExp( '^' + C + v + '[^aeiouwxy]$' );\nvar mgr0 = '^(' + C + ')?' + V + C; // [C]VC... is m>0\nvar RE_MGR0 = new RegExp( mgr0 );\nvar meq1 = '^(' + C + ')?' + V + C + '(' + V + ')?$'; // [C]VC[V] is m=1\nvar RE_MEQ1 = new RegExp( meq1 );\nvar mgr1 = '^(' + C + ')?' + V + C + V + C; // [C]VCVC... is m>1\nvar RE_MGR1 = new RegExp( mgr1 );\nvar sV = '^(' + C + ')?' + v; // vowel in stem\nvar RE_SV = new RegExp( sV );\nvar RE_STEP1A = /^(.+?)(ss|i)es$/;\nvar RE2_STEP1A = /^(.+?)([^s])s$/;\nvar RE_STEP1B = /^(.+?)eed$/;\nvar RE2_STEP1B = /^(.+?)(ed|ing)$/;\nvar RE_STEP1C = /^(.+?)y$/;\nvar RE_STEP2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\nvar RE_STEP3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\nvar RE_STEP4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\nvar RE2_STEP4 = /^(.+?)(s|t)(ion)$/;\nvar RE_STEP5 = /^(.+?)e$/;\nvar RE_LAST = /.$/;\nvar RE_ATBLIZ = /(at|bl|iz)$/;\nvar RE_DOUBLE = new RegExp( '([^aeiouylsz])\\\\1$' );\n\n\n// MAIN //\n\n/**\n* Extracts the stem of a given word using the Porter stemming algorithm.\n*\n* ## References\n*\n* -   Porter, Michael F. 1980. \"An algorithm for suffix stripping.\" _Program_ 13 (3): 130â€“37. doi:[10.1108/eb046814][@porter:1980].\n*\n* [@porter:1980]: https://doi.org/10.1108/eb046814\n*\n* @param {string} word - input word\n* @throws {TypeError} first argument must be a string\n* @returns {string} word stem\n*\n* @example\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walks' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'worldwide' );\n* // returns 'worldwid'\n*\n* @example\n* var out = porterStemmer( '' );\n* // returns ''\n*/\nfunction porterStemmer( word ) {\n\tvar firstch;\n\tvar suffix;\n\tvar stem;\n\tvar fp;\n\n\tif ( !isString( word ) ) {\n\t\tthrow new TypeError( format( '0NC3R', word ) );\n\t}\n\tif ( word.length < 3 ) {\n\t\treturn word;\n\t}\n\tword = lowercase( word );\n\tfirstch = word[ 0 ];\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toUpperCase() + word.substr( 1 );\n\t}\n\n\t// Step 1a:\n\tif ( RE_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE_STEP1A, '$1$2' );\n\t} else if ( RE2_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE2_STEP1A, '$1$2' );\n\t}\n\n\t// Step 1b:\n\tif ( RE_STEP1B.test( word ) ) {\n\t\tfp = RE_STEP1B.exec( word );\n\t\tif ( RE_MGR0.test( fp[ 1 ] ) ) {\n\t\t\tword = replace( word, RE_LAST, '' );\n\t\t}\n\t} else if ( RE2_STEP1B.test( word ) ) {\n\t\tfp = RE2_STEP1B.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem;\n\t\t\tif ( RE_ATBLIZ.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t} else if ( RE_DOUBLE.test( word ) ) {\n\t\t\t\tword = replace( word, RE_LAST, '' );\n\t\t\t} else if ( RE_CV.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t}\n\t\t}\n\t}\n\n\t// Step 1c:\n\tif ( RE_STEP1C.test( word ) ) {\n\t\tfp = RE_STEP1C.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem + 'i';\n\t\t}\n\t}\n\n\t// Step 2:\n\tif ( RE_STEP2.test( word ) ) {\n\t\tfp = RE_STEP2.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step2list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 3:\n\tif ( RE_STEP3.test( word ) ) {\n\t\tfp = RE_STEP3.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step3list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 4:\n\tif ( RE_STEP4.test( word ) ) {\n\t\tfp = RE_STEP4.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t} else if ( RE2_STEP4.test( word ) ) {\n\t\tfp = RE2_STEP4.exec( word );\n\t\tstem = fp[ 1 ] + fp[ 2 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\n\t// Step 5:\n\tif ( RE_STEP5.test( word ) ) {\n\t\tfp = RE_STEP5.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif (\n\t\t\tRE_MGR1.test( stem ) ||\n\t\t\t( RE_MEQ1.test( stem ) && !( RE_CV.test( stem ) ) )\n\t\t) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\tif ( endsWith( word, 'll' ) && RE_MGR1.test( word ) ) {\n\t\tword = replace( word, RE_LAST, '' );\n\t}\n\n\t// Turn initial Y back to y:\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toLowerCase() + word.substr( 1 );\n\t}\n\treturn word;\n}\n\n\n// EXPORTS //\n\nmodule.exports = porterStemmer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Extract the stem of a given word.\n*\n* @module @stdlib/nlp-porter-stemmer\n*\n* @example\n* var porterStemmer = require( '@stdlib/nlp-porter-stemmer' );\n*\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* out = porterStemmer( 'walks' );\n* // returns 'walk'\n*/\n\n// MODULES //\n\nvar porterStemmer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = porterStemmer;\n"],"names":["isString","require$$0","isPrimitive","endsWith","require$$1","lowercase","require$$2","replace","require$$3","format","require$$4","step2list","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","step3list","icate","ative","alize","iciti","ical","ful","ness","v","C","c","RE_CV","RegExp","RE_MGR0","RE_MEQ1","RE_MGR1","RE_SV","RE_STEP1A","RE2_STEP1A","RE_STEP1B","RE2_STEP1B","RE_STEP1C","RE_STEP2","RE_STEP3","RE_STEP4","RE2_STEP4","RE_STEP5","RE_LAST","RE_ATBLIZ","RE_DOUBLE","lib","word","firstch","suffix","stem","fp","TypeError","length","toUpperCase","substr","test","exec","toLowerCase"],"mappings":"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"}