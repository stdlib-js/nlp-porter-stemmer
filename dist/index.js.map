{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* This code is a modification of an existing JavaScript implementation of their [Porter stemming algorithm]{@link https://tartarus.org/martin/PorterStemmer/}.\n*\n* ```text\n* Release 1 be 'andargor', Jul 2004\n* Release 2 (substantially revised) by Christopher McKenzie, Aug 2009\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar endsWith = require( '@stdlib/string-base-ends-with' );\nvar lowercase = require( '@stdlib/string-base-lowercase' );\nvar replace = require( '@stdlib/string-base-replace' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar step2list = {\n\t'ational': 'ate',\n\t'tional': 'tion',\n\t'enci': 'ence',\n\t'anci': 'ance',\n\t'izer': 'ize',\n\t'bli': 'ble',\n\t'alli': 'al',\n\t'entli': 'ent',\n\t'eli': 'e',\n\t'ousli': 'ous',\n\t'ization': 'ize',\n\t'ation': 'ate',\n\t'ator': 'ate',\n\t'alism': 'al',\n\t'iveness': 'ive',\n\t'fulness': 'ful',\n\t'ousness': 'ous',\n\t'aliti': 'al',\n\t'iviti': 'ive',\n\t'biliti': 'ble',\n\t'logi': 'log'\n};\nvar step3list = {\n\t'icate': 'ic',\n\t'ative': '',\n\t'alize': 'al',\n\t'iciti': 'ic',\n\t'ical': 'ic',\n\t'ful': '',\n\t'ness': ''\n};\nvar c = '[^aeiou]'; // consonant\nvar v = '[aeiouy]'; // vowel\nvar C = c + '[^aeiouy]*'; // consonant sequence\nvar V = v + '[aeiou]*'; // vowel sequence\nvar RE_CV = new RegExp( '^' + C + v + '[^aeiouwxy]$' );\nvar mgr0 = '^(' + C + ')?' + V + C; // [C]VC... is m>0\nvar RE_MGR0 = new RegExp( mgr0 );\nvar meq1 = '^(' + C + ')?' + V + C + '(' + V + ')?$'; // [C]VC[V] is m=1\nvar RE_MEQ1 = new RegExp( meq1 );\nvar mgr1 = '^(' + C + ')?' + V + C + V + C; // [C]VCVC... is m>1\nvar RE_MGR1 = new RegExp( mgr1 );\nvar sV = '^(' + C + ')?' + v; // vowel in stem\nvar RE_SV = new RegExp( sV );\nvar RE_STEP1A = /^(.+?)(ss|i)es$/;\nvar RE2_STEP1A = /^(.+?)([^s])s$/;\nvar RE_STEP1B = /^(.+?)eed$/;\nvar RE2_STEP1B = /^(.+?)(ed|ing)$/;\nvar RE_STEP1C = /^(.+?)y$/;\nvar RE_STEP2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\nvar RE_STEP3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\nvar RE_STEP4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\nvar RE2_STEP4 = /^(.+?)(s|t)(ion)$/;\nvar RE_STEP5 = /^(.+?)e$/;\nvar RE_LAST = /.$/;\nvar RE_ATBLIZ = /(at|bl|iz)$/;\nvar RE_DOUBLE = new RegExp( '([^aeiouylsz])\\\\1$' ); // eslint-disable-line prefer-regex-literals\n\n\n// MAIN //\n\n/**\n* Extracts the stem of a given word using the Porter stemming algorithm.\n*\n* ## References\n*\n* -   Porter, Michael F. 1980. \"An algorithm for suffix stripping.\" _Program_ 13 (3): 130\u201337. doi:[10.1108/eb046814][@porter:1980].\n*\n* [@porter:1980]: https://doi.org/10.1108/eb046814\n*\n* @param {string} word - input word\n* @throws {TypeError} first argument must be a string\n* @returns {string} word stem\n*\n* @example\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walks' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'worldwide' );\n* // returns 'worldwid'\n*\n* @example\n* var out = porterStemmer( '' );\n* // returns ''\n*/\nfunction porterStemmer( word ) {\n\tvar firstch;\n\tvar suffix;\n\tvar stem;\n\tvar fp;\n\n\tif ( !isString( word ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', word ) );\n\t}\n\tif ( word.length < 3 ) {\n\t\treturn word;\n\t}\n\tword = lowercase( word );\n\tfirstch = word[ 0 ];\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toUpperCase() + word.substr( 1 );\n\t}\n\n\t// Step 1a:\n\tif ( RE_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE_STEP1A, '$1$2' );\n\t} else if ( RE2_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE2_STEP1A, '$1$2' );\n\t}\n\n\t// Step 1b:\n\tif ( RE_STEP1B.test( word ) ) {\n\t\tfp = RE_STEP1B.exec( word );\n\t\tif ( RE_MGR0.test( fp[ 1 ] ) ) {\n\t\t\tword = replace( word, RE_LAST, '' );\n\t\t}\n\t} else if ( RE2_STEP1B.test( word ) ) {\n\t\tfp = RE2_STEP1B.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem;\n\t\t\tif ( RE_ATBLIZ.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t} else if ( RE_DOUBLE.test( word ) ) {\n\t\t\t\tword = replace( word, RE_LAST, '' );\n\t\t\t} else if ( RE_CV.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t}\n\t\t}\n\t}\n\n\t// Step 1c:\n\tif ( RE_STEP1C.test( word ) ) {\n\t\tfp = RE_STEP1C.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem + 'i';\n\t\t}\n\t}\n\n\t// Step 2:\n\tif ( RE_STEP2.test( word ) ) {\n\t\tfp = RE_STEP2.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step2list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 3:\n\tif ( RE_STEP3.test( word ) ) {\n\t\tfp = RE_STEP3.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step3list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 4:\n\tif ( RE_STEP4.test( word ) ) {\n\t\tfp = RE_STEP4.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t} else if ( RE2_STEP4.test( word ) ) {\n\t\tfp = RE2_STEP4.exec( word );\n\t\tstem = fp[ 1 ] + fp[ 2 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\n\t// Step 5:\n\tif ( RE_STEP5.test( word ) ) {\n\t\tfp = RE_STEP5.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif (\n\t\t\tRE_MGR1.test( stem ) ||\n\t\t\t( RE_MEQ1.test( stem ) && !( RE_CV.test( stem ) ) )\n\t\t) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\tif ( endsWith( word, 'll', word.length ) && RE_MGR1.test( word ) ) {\n\t\tword = replace( word, RE_LAST, '' );\n\t}\n\n\t// Turn initial Y back to y:\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toLowerCase() + word.substr( 1 );\n\t}\n\treturn word;\n}\n\n\n// EXPORTS //\n\nmodule.exports = porterStemmer;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Extract the stem of a given word.\n*\n* @module @stdlib/nlp-porter-stemmer\n*\n* @example\n* var porterStemmer = require( '@stdlib/nlp-porter-stemmer' );\n*\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* out = porterStemmer( 'walks' );\n* // returns 'walk'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isString", "endsWith", "lowercase", "replace", "format", "step2list", "step3list", "c", "v", "C", "V", "RE_CV", "mgr0", "RE_MGR0", "meq1", "RE_MEQ1", "mgr1", "RE_MGR1", "sV", "RE_SV", "RE_STEP1A", "RE2_STEP1A", "RE_STEP1B", "RE2_STEP1B", "RE_STEP1C", "RE_STEP2", "RE_STEP3", "RE_STEP4", "RE2_STEP4", "RE_STEP5", "RE_LAST", "RE_ATBLIZ", "RE_DOUBLE", "porterStemmer", "word", "firstch", "suffix", "stem", "fp", "main"]
}
